{"version":3,"sources":["assets/swing.png","Routes/Home/HomeStyles.jsx","Components/Section/SectionStyles.jsx","Components/Section/Section.jsx","Components/Loader/LoaderStyles.jsx","Components/Loader/Loader.jsx","Components/Error/ErrorStyles.jsx","Components/Error/Error.jsx","Components/Poster/PosterStyles.jsx","Components/Poster/Poster.jsx","Routes/Home/HomePresenter.jsx","utils/API.js","Routes/Home/Home.jsx","Routes/Home/HomeContainer.jsx","Routes/Search/SearchStyles.jsx","Routes/Search/SearchPresenter.jsx","Routes/Search/Search.jsx","Routes/Search/SearchContainer.jsx","Routes/TV/TVStyles.jsx","Routes/TV/TVPresenter.jsx","Routes/TV/TV.jsx","Routes/TV/TVContainer.jsx","Routes/Detail/DetailStyles.jsx","Routes/Detail/DetailPresenter.jsx","Routes/Detail/Detail.jsx","Routes/Detail/DetailContainer.jsx","Components/Header/HeaderStyles.jsx","Components/Header/Header.jsx","Routes/Router.jsx","styles/GlobalStyles.js","Components/App.js","index.js"],"names":["Home","Container","styled","div","Section","Title","span","Grid","title","children","Loader","role","aria-label","Error","Text","text","Poster","Image","props","bgUrl","ImageContainer","Rating","Year","id","imgUrl","rating","year","isMovie","to","noPoster","length","substring","HomePresenter","nowPlaying","upComing","popular","error","loading","Helmet","map","movie","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","tvAPI","get","append_to_response","term","query","encodeURIComponent","movieAPI","HomeContainer","state","a","data","results","this","setState","React","Component","Search","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","show","original_name","first_air_date","SearchContainer","event","preventDefault","searchByTerm","target","TV","TVPresenter","topRated","airingToday","TVContainer","Detail","BackDrop","Content","Cover","Data","ItemContainer","Item","Divider","OverView","p","DetailPresenter","result","backdrop_path","require","default","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","pathname","location","includes","match","push","history","parsedID","parseInt","Number","isNaN","Header","header","List","ul","li","currentRoute","_Link","Link","withRouter","Router","path","exact","component","from","GlobalStyles","createGlobalStyle","reset","App","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75c33f68.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/swing.216de025.png\";","import styled from \"styled-components\";\n\nconst Home = {\n  Container: styled.div`\n    padding: 20px;\n  `,\n};\n\nexport default Home;\n","import styled from \"styled-components\";\n\nconst Section = {\n  Container: styled.div`\n    :not(:last-child) {\n      margin-bottom: 50px;\n    }\n  `,\n  Title: styled.span`\n    font-size: 16px;\n    font-weight: 600;\n  `,\n  Grid: styled.div`\n    margin-top: 25px;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, 125px);\n    grid-gap: 25px;\n  `,\n};\n\nexport default Section;\n","import Proptypes from \"prop-types\";\nimport S from \"./SectionStyles\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <S.Container>\n      <S.Title>{title}</S.Title>\n      <S.Grid>{children}</S.Grid>\n    </S.Container>\n  );\n};\n\nSection.propTypes = {\n  title: Proptypes.string.isRequired,\n  children: Proptypes.oneOfType([\n    Proptypes.arrayOf(Proptypes.node),\n    Proptypes.node,\n  ]),\n};\n\nexport default Section;\n","import styled from \"styled-components\";\n\nconst Loader = {\n  Container: styled.div`\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n    font-size: 32px;\n    margin-top: 100px;\n  `,\n};\n\nexport default Loader;\n","import S from \"./LoaderStyles\";\n\nconst Loader = () => {\n  return (\n    <S.Container>\n      <span role=\"img\" aria-label=\"Loading\">\n        Loading...⏰\n      </span>\n    </S.Container>\n  );\n};\n\nexport default Loader;\n","import styled from \"styled-components\";\n\nconst Error = {\n  Container: styled.div`\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n  `,\n  Text: styled.span`\n    color: #e74c3c;\n  `,\n};\n\nexport default Error;\n","import PropTypes from \"prop-types\";\nimport S from \"./ErrorStyles\";\n\nconst Error = ({ text }) => {\n  return (\n    <S.Container>\n      <S.Text>{text}</S.Text>\n    </S.Container>\n  );\n};\n\nError.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Error;\n","import styled from \"styled-components\";\n\nconst Poster = {\n  Container: styled.div`\n    font-size: 12px;\n  `,\n  Image: styled.div`\n    background-image: url(${(props) => props.bgUrl});\n    height: 180px;\n    background-size: cover;\n    border-radius: 4px;\n    background-position: center center;\n    transition: opacity 0.1s linear;\n  `,\n  ImageContainer: styled.div`\n    margin-bottom: 5px;\n    position: relative;\n    &:hover {\n      div {\n        opacity: 0.3;\n      }\n      span {\n        opacity: 1;\n      }\n    }\n  `,\n  Rating: styled.span`\n    position: absolute;\n    bottom: 5px;\n    right: 5px;\n    opacity: 0;\n  `,\n  Title: styled.span`\n    display: block;\n    margin-bottom: 3px;\n  `,\n  Year: styled.span`\n    font-size: 10px;\n    color: rgba(255, 255, 255, 0.5);\n  `,\n};\n\nexport default Poster;\n","import PropTypes from \"prop-types\";\nimport S from \"./PosterStyles\";\nimport noPoster from \"@/assets/swing.png\";\nimport { Link } from \"react-router-dom\";\n\nconst Poster = ({ id, imgUrl, title, rating, year, isMovie = false }) => {\n  return (\n    <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n      <S.Container>\n        <S.ImageContainer>\n          <S.Image\n            bgUrl={\n              imgUrl ? `https://image.tmdb.org/t/p/w300${imgUrl}` : noPoster\n            }\n          />\n          <S.Rating>\n            <span role=\"img\" aria-label=\"rating\">\n              ⭐️\n            </span>{\" \"}\n            {rating}/10\n          </S.Rating>\n        </S.ImageContainer>\n        <S.Title>\n          {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n        </S.Title>\n        <S.Year>{year}</S.Year>\n      </S.Container>\n    </Link>\n  );\n};\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imgUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import PropTypes from \"prop-types\";\nimport S from \"./HomeStyles\";\nimport Helmet from \"react-helmet\";\nimport Section from \"@/Components/Section/Section\";\nimport Loader from \"@/Components/Loader/Loader\";\nimport Error from \"@/Components/Error/Error\";\nimport Poster from \"@/Components/Poster/Poster\";\n\nconst HomePresenter = ({ nowPlaying, upComing, popular, error, loading }) => {\n  return (\n    <>\n      <Helmet>\n        <title>Movies | Nomflix</title>\n      </Helmet>\n      {!loading ? (\n        <S.Container>\n          {nowPlaying && nowPlaying.length > 0 && (\n            <Section title=\"Now Playing Movies\">\n              {nowPlaying.map((movie) => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  imgUrl={movie.poster_path}\n                  title={movie.original_title}\n                  rating={movie.vote_average}\n                  year={\n                    movie.release_date && movie.release_date.substring(0, 4)\n                  }\n                  isMovie={true}\n                />\n              ))}\n            </Section>\n          )}\n          {upComing && upComing.length > 0 && (\n            <Section title=\"UpComing Movies\">\n              {upComing.map((movie) => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  imgUrl={movie.poster_path}\n                  title={movie.original_title}\n                  rating={movie.vote_average}\n                  year={\n                    movie.release_date && movie.release_date.substring(0, 4)\n                  }\n                  isMovie={true}\n                />\n              ))}\n            </Section>\n          )}\n          {popular && popular.length > 0 && (\n            <Section title=\"Popular Movies\">\n              {popular.map((movie) => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  imgUrl={movie.poster_path}\n                  title={movie.original_title}\n                  rating={movie.vote_average}\n                  year={\n                    movie.release_date && movie.release_date.substring(0, 4)\n                  }\n                  isMovie={true}\n                />\n              ))}\n            </Section>\n          )}\n          {error && <Error text={error} />}\n        </S.Container>\n      ) : (\n        <Loader />\n      )}\n    </>\n  );\n};\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upComing: PropTypes.array,\n  popular: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n\tbaseURL: \"https://api.themoviedb.org/3/\",\n\tparams: {\n\t\t\"api_key\": \"0052015a58a411d92d94b5ba384c5fa8\",\n\t\t\"language\": \"en-US\"\n\t}\n})\n\nconst tvAPI = {\n\ttopRated: () => api.get(\"tv/top_rated\"),\n\tpopular: () => api.get(\"tv/popular\"),\n\tairingToday: () => api.get(\"tv/airing_today\"),\n\tshowDetail: (id) => api.get(`tv/${id}`, {\n\t\tparams: { append_to_response: \"videos\" }\n\t}), // 뒤에 붙이는 것은 query parameter\n\tsearch: (term) => api.get(`search/tv`, {\n\t\tparams: {\n\t\t\tquery: encodeURIComponent(term)\n\t\t} // 스페이스나 @같은 것을 encode된 값으로 넣어줘야 함\n\t})\n}\n\nconst movieAPI = {\n\tnowPlaying: () => api.get(\"movie/now_playing\"),\n\tupComing: () => api.get(\"movie/upcoming\"),\n\tpopular: () => api.get(\"movie/popular\"),\n\tmovieDetail: (id) => api.get(`movie/${id}`, {\n\t\tparams: { append_to_response: \"videos\" }\n\t}),\n\tsearch: (term) => api.get(`search/movie`, {\n\t\tparams: {\n\t\t\tquery: encodeURIComponent(term)\n\t\t}\n\t})\n}\n\nexport { tvAPI, movieAPI }","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { movieAPI } from \"@/utils/API\";\n\nclass HomeContainer extends React.Component {\n  state = {\n    nowPlaying: null,\n    upComing: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await movieAPI.nowPlaying();\n      const {\n        data: { results: upComing },\n      } = await movieAPI.upComing();\n      const {\n        data: { results: popular },\n      } = await movieAPI.popular();\n      this.setState({\n        nowPlaying,\n        upComing,\n        popular,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find movie information.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upComing, popular, error, loading } = this.state;\n    return (\n      <HomePresenter {...{ nowPlaying, upComing, popular, error, loading }} />\n    );\n  }\n}\n\nexport default HomeContainer;\n","import styled from \"styled-components\";\n\nconst Search = {\n  Container: styled.div`\n    padding: 20px;\n  `,\n  Form: styled.form`\n    margin-bottom: 50px;\n    width: 100%;\n  `,\n  Input: styled.input`\n    all: unset;\n    font-size: 28px;\n    width: 100%;\n  `,\n};\n\nexport default Search;\n","import PropTypes from \"prop-types\";\nimport S from \"./SearchStyles\";\nimport Helmet from \"react-helmet\";\nimport Section from \"@/Components/Section/Section\";\nimport Loader from \"@/Components/Loader/Loader\";\nimport Error from \"@/Components/Error/Error\";\nimport Poster from \"@/Components/Poster/Poster\";\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  searchTerm,\n  error,\n  loading,\n  handleSubmit,\n  updateTerm,\n}) => {\n  return (\n    <S.Container>\n      <Helmet>\n        <title>Search | Nomflix</title>\n      </Helmet>\n      <S.Form onSubmit={handleSubmit}>\n        <S.Input\n          placeholder=\"Search Movies or TV Shows...\"\n          value={searchTerm}\n          onChange={updateTerm}\n        />\n      </S.Form>\n      {!loading ? (\n        <>\n          {movieResults && movieResults.length > 0 && (\n            <Section title=\"Movie Results\">\n              {movieResults.map((movie) => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  imgUrl={movie.poster_path}\n                  title={movie.original_title}\n                  rating={movie.vote_average}\n                  year={\n                    movie.release_date && movie.release_date.substring(0, 4)\n                  }\n                  isMovie={true}\n                />\n              ))}\n            </Section>\n          )}\n          {tvResults && tvResults.length > 0 && (\n            <Section title=\"TV Results\">\n              {tvResults.map((show) => (\n                <Poster\n                  key={show.id}\n                  id={show.id}\n                  imgUrl={show.poster_path}\n                  title={show.original_name}\n                  rating={show.vote_average}\n                  year={\n                    show.first_air_date && show.first_air_date.substring(0, 4)\n                  }\n                />\n              ))}\n            </Section>\n          )}\n          {error && <Error text={error} />}\n        </>\n      ) : (\n        <Loader />\n      )}\n    </S.Container>\n  );\n};\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  searchTerm: PropTypes.string,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { tvAPI, movieAPI } from \"@/utils/API\";\n\nclass SearchContainer extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    error: null,\n    loading: false,\n  };\n\n  componentDidMount() {}\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm(searchTerm);\n    }\n  };\n\n  updateTerm = ({ target: { value } }) => {\n    this.setState({\n      searchTerm: value,\n    });\n  };\n\n  searchByTerm = async (term) => {\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults },\n      } = await movieAPI.search(term);\n      const {\n        data: { results: tvResults },\n      } = await tvAPI.search(term);\n      this.setState({\n        movieResults,\n        tvResults,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find results.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\n    return (\n      <SearchPresenter\n        {...{ movieResults, tvResults, searchTerm, error, loading }}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n\nexport default SearchContainer;\n","import styled from \"styled-components\";\n\nconst TV = {\n  Container: styled.div`\n    padding: 20px;\n  `,\n};\n\nexport default TV;\n","import PropTypes from \"prop-types\";\nimport S from \"./TVStyles\";\nimport Helmet from \"react-helmet\";\nimport Section from \"@/Components/Section/Section\";\nimport Loader from \"@/Components/Loader/Loader\";\nimport Error from \"@/Components/Error/Error\";\nimport Poster from \"@/Components/Poster/Poster\";\n\nconst TVPresenter = ({ topRated, airingToday, popular, error, loading }) => {\n  return (\n    <>\n      <Helmet>\n        <title>TV Shows | Nomflix</title>\n      </Helmet>\n      {!loading ? (\n        <S.Container>\n          {topRated && topRated.length > 0 && (\n            <Section title=\"Top Rated Shows\">\n              {topRated.map((show) => (\n                <Poster\n                  key={show.id}\n                  id={show.id}\n                  imgUrl={show.poster_path}\n                  title={show.original_name}\n                  rating={show.vote_average}\n                  year={\n                    show.first_air_date && show.first_air_date.substring(0, 4)\n                  }\n                />\n              ))}\n            </Section>\n          )}\n          {popular && popular.length > 0 && (\n            <Section title=\"Popular Shows\">\n              {popular.map((show) => (\n                <Poster\n                  key={show.id}\n                  id={show.id}\n                  imgUrl={show.poster_path}\n                  title={show.original_name}\n                  rating={show.vote_average}\n                  year={\n                    show.first_air_date && show.first_air_date.substring(0, 4)\n                  }\n                />\n              ))}\n            </Section>\n          )}\n          {airingToday && airingToday.length > 0 && (\n            <Section title=\"Airing Today Shows\">\n              {airingToday.map((show) => (\n                <Poster\n                  key={show.id}\n                  id={show.id}\n                  imgUrl={show.poster_path}\n                  title={show.original_name}\n                  rating={show.vote_average}\n                  year={\n                    show.first_air_date && show.first_air_date.substring(0, 4)\n                  }\n                />\n              ))}\n            </Section>\n          )}\n          {error && <Error text={error} />}\n        </S.Container>\n      ) : (\n        <Loader />\n      )}\n    </>\n  );\n};\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  airingToday: PropTypes.array,\n  popular: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvAPI } from \"@/utils/API\";\n\nclass TVContainer extends React.Component {\n  state = {\n    topRated: null,\n    airingToday: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvAPI.topRated();\n      const {\n        data: { results: airingToday },\n      } = await tvAPI.airingToday();\n      const {\n        data: { results: popular },\n      } = await tvAPI.popular();\n      this.setState({\n        topRated,\n        airingToday,\n        popular,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find TV information.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { topRated, airingToday, popular, error, loading } = this.state;\n    return (\n      <TVPresenter {...{ topRated, airingToday, popular, error, loading }} />\n    );\n  }\n}\n\nexport default TVContainer;\n","import styled from \"styled-components\";\n\nconst Detail = {\n  Container: styled.div`\n    height: calc(100vh - 50px);\n    width: 100%;\n    position: relative;\n    padding: 50px;\n  `,\n  BackDrop: styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-image: url(${(props) => props.bgUrl});\n    background-size: cover;\n    background-position: center center;\n    filter: blur(3px);\n    opacity: 0.5;\n    z-index: 0;\n  `,\n  Content: styled.div`\n    display: flex;\n    width: 100%;\n    height: 100%;\n    position: relative;\n    z-index: 1;\n  `,\n  Cover: styled.div`\n    width: 30%;\n    background-image: url(${(props) => props.bgUrl});\n    background-size: cover;\n    background-position: center center;\n    height: 100%;\n    border-radius: 5px;\n  `,\n  Data: styled.div`\n    width: 70%;\n    margin-left: 10px;\n  `,\n  Title: styled.div`\n    font-size: 32px;\n    margin-bottom: 20px;\n  `,\n  ItemContainer: styled.div`\n    margin: 20px 0px;\n  `,\n  Item: styled.span``,\n  Divider: styled.span`\n    margin: 0px 10px;\n  `,\n  OverView: styled.p`\n    font-size: 12px;\n    color: rgba(255, 255, 255, 0.7);\n    line-height: 1.5;\n    width: 50%;\n  `,\n};\n\nexport default Detail;\n","import PropTypes from \"prop-types\";\nimport S from \"./DetailStyles\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"@/Components/Loader/Loader\";\nimport Error from \"@/Components/Error/Error\";\n\nconst DetailPresenter = ({ result, error, loading }) => {\n  return !loading ? (\n    <>\n      <S.Container>\n        <Helmet>\n          <title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}{\" \"}\n            | Nomflix\n          </title>\n        </Helmet>\n        <S.BackDrop\n          bgUrl={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n        />\n        <S.Content>\n          <S.Cover\n            bgUrl={\n              result.poster_path\n                ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n                : require(\"@/assets/swing.png\").default\n            }\n          />\n          <S.Data>\n            <S.Title>\n              {result.original_title\n                ? result.original_title\n                : result.original_name}\n            </S.Title>\n            <S.ItemContainer>\n              <S.Item>\n                {result.release_date\n                  ? result.release_date.substring(0, 4)\n                  : result.first_air_date.substring(0, 4)}\n              </S.Item>\n              <S.Divider>•</S.Divider>\n              <S.Item>\n                {result.runtime ? result.runtime : result.episode_run_time[0]}{\" \"}\n                min\n              </S.Item>\n              <S.Divider>•</S.Divider>\n              <S.Item>\n                {result.genres &&\n                  result.genres.map((genre, index) =>\n                    index === result.genres.length - 1\n                      ? genre.name\n                      : `${genre.name}/`\n                  )}\n              </S.Item>\n            </S.ItemContainer>\n            <S.OverView>{result.overview}</S.OverView>\n          </S.Data>\n        </S.Content>\n      </S.Container>\n      {error && <Error text={error} />}\n    </>\n  ) : (\n    <>\n      <Helmet>\n        <title>Loading | Nomflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  );\n};\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import { movieAPI, tvAPI } from \"@/utils/API\";\nimport React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\n\nclass DetailContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\"),\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedID = parseInt(Number(id));\n    if (isNaN(parsedID)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await movieAPI.movieDetail(parsedID));\n      } else {\n        ({ data: result } = await tvAPI.showDetail(parsedID));\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    return <DetailPresenter {...{ result, error, loading }} />;\n  }\n}\n\nexport default DetailContainer;\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  padding: 0px 10px;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${(props) => (props.currentRoute ? \"#3498db\" : \"transparent\")};\n  transition: 0.5s ease-in-out;\n`;\n\nconst _Link = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport { Header, List, Item, _Link };\n","import { withRouter } from \"react-router-dom\";\nimport * as S from \"./HeaderStyles\";\n\nconst Header = ({ location: { pathname } }) => {\n  return (\n    <S.Header>\n      <S.List>\n        <S.Item currentRoute={pathname === \"/\"}>\n          <S._Link to=\"/\">Movies</S._Link>\n        </S.Item>\n        <S.Item currentRoute={pathname === \"/tv\"}>\n          <S._Link to=\"/tv\">TV</S._Link>\n        </S.Item>\n        <S.Item currentRoute={pathname === \"/search\"}>\n          <S._Link to=\"/search\">Search</S._Link>\n        </S.Item>\n      </S.List>\n    </S.Header>\n  );\n};\n\nexport default withRouter(Header);\n","import { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\nimport Home from \"./Home/Home\";\nimport Search from \"./Search/Search\";\nimport TV from \"./TV/TV\";\nimport Detail from \"./Detail/Detail\";\nimport Header from \"@/Components/Header/Header\";\n\nconst Router = () => {\n  return (\n    <BrowserRouter>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" component={TV} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Router;\n","import { createGlobalStyle } from \"styled-components\"\nimport reset from \"styled-reset\"\n\nconst GlobalStyles = createGlobalStyle`\n\t${reset};\n\ta{\n\t\ttext-decoration : none;\n\t\tcolor:inherit;\n\t\tcursor:pointer;\n\t}\n\t*{\n\t\tbox-sizing:border-box;\n\t}\n\tbody{\n\t\tcolor:white;\n\t\tfont-size : 12px;\n\t\tbackground-color : rgba(20,20,20,1);\n\t\tpadding-top:50px;\n\t}\n`;\n\nexport default GlobalStyles","import Router from \"@/Routes/Router\";\nimport GlobalStyles from \"@/styles/GlobalStyles\"\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <GlobalStyles />\n      <Router />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from \"@/Components/App\"\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}